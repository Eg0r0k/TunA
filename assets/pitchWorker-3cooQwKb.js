var zt=Object.defineProperty;var Nt=(R,w,M)=>w in R?zt(R,w,{enumerable:!0,configurable:!0,writable:!0,value:M}):R[w]=M;var y=(R,w,M)=>Nt(R,typeof w!="symbol"?w+"":w,M);(function(){"use strict";function R(i){return i&&i.__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i}var w,M;function mt(){if(M)return w;M=1;function i(n){if(this.size=n|0,this.size<=1||(this.size&this.size-1)!==0)throw new Error("FFT size must be a power of two and bigger than 1");this._csize=n<<1;for(var t=new Array(this.size*2),r=0;r<t.length;r+=2){const u=Math.PI*r/this.size;t[r]=Math.cos(u),t[r+1]=-Math.sin(u)}this.table=t;for(var e=0,s=1;this.size>s;s<<=1)e++;this._width=e%2===0?e-1:e,this._bitrev=new Array(1<<this._width);for(var a=0;a<this._bitrev.length;a++){this._bitrev[a]=0;for(var o=0;o<this._width;o+=2){var c=this._width-o-2;this._bitrev[a]|=(a>>>o&3)<<c}}this._out=null,this._data=null,this._inv=0}return w=i,i.prototype.fromComplexArray=function(t,r){for(var e=r||new Array(t.length>>>1),s=0;s<t.length;s+=2)e[s>>>1]=t[s];return e},i.prototype.createComplexArray=function(){const t=new Array(this._csize);for(var r=0;r<t.length;r++)t[r]=0;return t},i.prototype.toComplexArray=function(t,r){for(var e=r||this.createComplexArray(),s=0;s<e.length;s+=2)e[s]=t[s>>>1],e[s+1]=0;return e},i.prototype.completeSpectrum=function(t){for(var r=this._csize,e=r>>>1,s=2;s<e;s+=2)t[r-s]=t[s],t[r-s+1]=-t[s+1]},i.prototype.transform=function(t,r){if(t===r)throw new Error("Input and output buffers must be different");this._out=t,this._data=r,this._inv=0,this._transform4(),this._out=null,this._data=null},i.prototype.realTransform=function(t,r){if(t===r)throw new Error("Input and output buffers must be different");this._out=t,this._data=r,this._inv=0,this._realTransform4(),this._out=null,this._data=null},i.prototype.inverseTransform=function(t,r){if(t===r)throw new Error("Input and output buffers must be different");this._out=t,this._data=r,this._inv=1,this._transform4();for(var e=0;e<t.length;e++)t[e]/=this.size;this._out=null,this._data=null},i.prototype._transform4=function(){var t=this._out,r=this._csize,e=this._width,s=1<<e,a=r/s<<1,o,c,u=this._bitrev;if(a===4)for(o=0,c=0;o<r;o+=a,c++){const l=u[c];this._singleTransform2(o,l,s)}else for(o=0,c=0;o<r;o+=a,c++){const l=u[c];this._singleTransform4(o,l,s)}var f=this._inv?-1:1,h=this.table;for(s>>=2;s>=2;s>>=2){a=r/s<<1;var v=a>>>2;for(o=0;o<r;o+=a)for(var p=o+v,b=o,_=0;b<p;b+=2,_+=s){const l=b,m=l+v,d=m+v,g=d+v,A=t[l],I=t[l+1],T=t[m],F=t[m+1],B=t[d],x=t[d+1],E=t[g],C=t[g+1],z=A,N=I,V=h[_],D=f*h[_+1],S=T*V-F*D,Y=T*D+F*V,K=h[2*_],H=f*h[2*_+1],J=B*K-x*H,W=B*H+x*K,Z=h[3*_],j=f*h[3*_+1],L=E*Z-C*j,q=E*j+C*Z,k=z+J,U=N+W,Q=z-J,O=N-W,tt=S+L,P=Y+q,$=f*(S-L),rt=f*(Y-q),st=k+tt,ot=U+P,it=k-tt,at=U-P,ct=Q+rt,ft=O-$,ht=Q-rt,lt=O+$;t[l]=st,t[l+1]=ot,t[m]=ct,t[m+1]=ft,t[d]=it,t[d+1]=at,t[g]=ht,t[g+1]=lt}}},i.prototype._singleTransform2=function(t,r,e){const s=this._out,a=this._data,o=a[r],c=a[r+1],u=a[r+e],f=a[r+e+1],h=o+u,v=c+f,p=o-u,b=c-f;s[t]=h,s[t+1]=v,s[t+2]=p,s[t+3]=b},i.prototype._singleTransform4=function(t,r,e){const s=this._out,a=this._data,o=this._inv?-1:1,c=e*2,u=e*3,f=a[r],h=a[r+1],v=a[r+e],p=a[r+e+1],b=a[r+c],_=a[r+c+1],l=a[r+u],m=a[r+u+1],d=f+b,g=h+_,A=f-b,I=h-_,T=v+l,F=p+m,B=o*(v-l),x=o*(p-m),E=d+T,C=g+F,z=A+x,N=I-B,V=d-T,D=g-F,S=A-x,Y=I+B;s[t]=E,s[t+1]=C,s[t+2]=z,s[t+3]=N,s[t+4]=V,s[t+5]=D,s[t+6]=S,s[t+7]=Y},i.prototype._realTransform4=function(){var t=this._out,r=this._csize,e=this._width,s=1<<e,a=r/s<<1,o,c,u=this._bitrev;if(a===4)for(o=0,c=0;o<r;o+=a,c++){const ut=u[c];this._singleRealTransform2(o,ut>>>1,s>>>1)}else for(o=0,c=0;o<r;o+=a,c++){const ut=u[c];this._singleRealTransform4(o,ut>>>1,s>>>1)}var f=this._inv?-1:1,h=this.table;for(s>>=2;s>=2;s>>=2){a=r/s<<1;var v=a>>>1,p=v>>>1,b=p>>>1;for(o=0;o<r;o+=a)for(var _=0,l=0;_<=b;_+=2,l+=s){var m=o+_,d=m+p,g=d+p,A=g+p,I=t[m],T=t[m+1],F=t[d],B=t[d+1],x=t[g],E=t[g+1],C=t[A],z=t[A+1],N=I,V=T,D=h[l],S=f*h[l+1],Y=F*D-B*S,K=F*S+B*D,H=h[2*l],J=f*h[2*l+1],W=x*H-E*J,Z=x*J+E*H,j=h[3*l],L=f*h[3*l+1],q=C*j-z*L,k=C*L+z*j,U=N+W,Q=V+Z,O=N-W,tt=V-Z,P=Y+q,$=K+k,rt=f*(Y-q),st=f*(K-k),ot=U+P,it=Q+$,at=O+st,ct=tt-rt;if(t[m]=ot,t[m+1]=it,t[d]=at,t[d+1]=ct,_===0){var ft=U-P,ht=Q-$;t[g]=ft,t[g+1]=ht;continue}if(_!==b){var lt=O,wt=-tt,Ft=U,At=-Q,Tt=-f*st,It=-f*rt,Bt=-f*$,xt=-f*P,Rt=lt+Tt,Mt=wt+It,Et=Ft+xt,Ct=At-Bt,_t=o+p-_,vt=o+v-_;t[_t]=Rt,t[_t+1]=Mt,t[vt]=Et,t[vt+1]=Ct}}}},i.prototype._singleRealTransform2=function(t,r,e){const s=this._out,a=this._data,o=a[r],c=a[r+e],u=o+c,f=o-c;s[t]=u,s[t+1]=0,s[t+2]=f,s[t+3]=0},i.prototype._singleRealTransform4=function(t,r,e){const s=this._out,a=this._data,o=this._inv?-1:1,c=e*2,u=e*3,f=a[r],h=a[r+e],v=a[r+c],p=a[r+u],b=f+v,_=f-v,l=h+p,m=o*(h-p),d=b+l,g=_,A=-m,I=b-l,T=_,F=m;s[t]=d,s[t+1]=0,s[t+2]=g,s[t+3]=A,s[t+4]=I,s[t+5]=0,s[t+6]=T,s[t+7]=F},w}var dt=mt(),pt=R(dt);class X{constructor(n,t){y(this,"_inputLength");y(this,"_fft");y(this,"_bufferSupplier");y(this,"_paddedInputBuffer");y(this,"_transformBuffer");y(this,"_inverseBuffer");if(n<1)throw new Error("Input length must be at least one");this._inputLength=n,this._fft=new pt(yt(2*n)),this._bufferSupplier=t,this._paddedInputBuffer=this._bufferSupplier(this._fft.size),this._transformBuffer=this._bufferSupplier(2*this._fft.size),this._inverseBuffer=this._bufferSupplier(2*this._fft.size)}static forFloat32Array(n){return new X(n,t=>new Float32Array(t))}static forFloat64Array(n){return new X(n,t=>new Float64Array(t))}static forNumberArray(n){return new X(n,t=>Array(t))}get inputLength(){return this._inputLength}autocorrelate(n,t=this._bufferSupplier(n.length)){if(n.length!==this._inputLength)throw new Error(`Input must have length ${this._inputLength} but had length ${n.length}`);for(let e=0;e<n.length;e++)this._paddedInputBuffer[e]=n[e];for(let e=n.length;e<this._paddedInputBuffer.length;e++)this._paddedInputBuffer[e]=0;this._fft.realTransform(this._transformBuffer,this._paddedInputBuffer),this._fft.completeSpectrum(this._transformBuffer);const r=this._transformBuffer;for(let e=0;e<r.length;e+=2)r[e]=r[e]*r[e]+r[e+1]*r[e+1],r[e+1]=0;this._fft.inverseTransform(this._inverseBuffer,this._transformBuffer);for(let e=0;e<n.length;e++)t[e]=this._inverseBuffer[2*e];return t}}function gt(i){const n=[];let t=!1,r=-1/0,e=-1;for(let s=1;s<i.length-1;s++)i[s-1]<=0&&i[s]>0?(t=!0,e=s,r=i[s]):i[s-1]>0&&i[s]<=0?(t=!1,e!==-1&&n.push(e)):t&&i[s]>r&&(r=i[s],e=s);return n}function bt(i,n){const[t,r,e]=[i-1,i,i+1],[s,a,o]=[n[t],n[r],n[e]],c=s/2-a+o/2,u=-(s/2)*(r+e)+a*(t+e)-o/2*(t+r),f=s*r*e/2-a*t*e+o*t*r/2,h=-u/(2*c),v=c*h*h+u*h+f;return[h,v]}class G{constructor(n,t){y(this,"_autocorrelator");y(this,"_nsdfBuffer");y(this,"_clarityThreshold",.9);y(this,"_minVolumeAbsolute",0);y(this,"_maxInputAmplitude",1);this._autocorrelator=new X(n,t),this._nsdfBuffer=t(n)}static forFloat32Array(n){return new G(n,t=>new Float32Array(t))}static forFloat64Array(n){return new G(n,t=>new Float64Array(t))}static forNumberArray(n){return new G(n,t=>Array(t))}get inputLength(){return this._autocorrelator.inputLength}set clarityThreshold(n){if(!Number.isFinite(n)||n<=0||n>1)throw new Error("clarityThreshold must be a number in the range (0, 1]");this._clarityThreshold=n}set minVolumeAbsolute(n){if(!Number.isFinite(n)||n<0||n>this._maxInputAmplitude)throw new Error(`minVolumeAbsolute must be a number in the range [0, ${this._maxInputAmplitude}]`);this._minVolumeAbsolute=n}set minVolumeDecibels(n){if(!Number.isFinite(n)||n>0)throw new Error("minVolumeDecibels must be a number <= 0");this._minVolumeAbsolute=this._maxInputAmplitude*10**(n/10)}set maxInputAmplitude(n){if(!Number.isFinite(n)||n<=0)throw new Error("maxInputAmplitude must be a number > 0");this._maxInputAmplitude=n}findPitch(n,t){if(this._belowMinimumVolume(n))return[0,0];this._nsdf(n);const r=gt(this._nsdfBuffer);if(r.length===0)return[0,0];const e=Math.max(...r.map(c=>this._nsdfBuffer[c])),s=r.find(c=>this._nsdfBuffer[c]>=this._clarityThreshold*e),[a,o]=bt(s,this._nsdfBuffer);return[t/a,Math.min(o,1)]}_belowMinimumVolume(n){if(this._minVolumeAbsolute===0)return!1;let t=0;for(let r=0;r<n.length;r++)t+=n[r]**2;return Math.sqrt(t/n.length)<this._minVolumeAbsolute}_nsdf(n){this._autocorrelator.autocorrelate(n,this._nsdfBuffer);let t=2*this._nsdfBuffer[0],r;for(r=0;r<this._nsdfBuffer.length&&t>0;r++)this._nsdfBuffer[r]=2*this._nsdfBuffer[r]/t,t-=n[r]**2+n[n.length-r-1]**2;for(;r<this._nsdfBuffer.length;r++)this._nsdfBuffer[r]=0}}function yt(i){return i--,i|=i>>1,i|=i>>2,i|=i>>4,i|=i>>8,i|=i>>16,i++,i}const nt={MIN_FREQUENCY:40,MAX_FREQUENCY:1200,MIN_CLARITY:.8};let et;self.onmessage=i=>{const{buffer:n,sampleRate:t}=i.data;et||(et=G.forFloat32Array(n.length));const[r,e]=et.findPitch(n,t);e>nt.MIN_CLARITY&&r>=nt.MIN_FREQUENCY&&r<=nt.MAX_FREQUENCY&&self.postMessage({pitch:r,clarity:e})}})();
